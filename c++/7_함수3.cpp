#include <iostream>
using namespace std;

/*
C에서는 함수 호출의 오버헤드를 제거하기 위해 매크로 함수를 이용.
*/
int square(int x)
{
    return x * x;
}

#define SQUARE(x) ((x)*(x))
// 텍스트 치환이기 때문에 우선순위 문제가 발생할 수 있음.
// 1) 매크로 함수의 인자 영역을 괄호로 감싸야 함.
// 2) 매크로 함수의 전체 치환 영역도 괄호로 감싸주어야 함.

int dbl(int x)
{
    return x*x;
}

#define DBL(x) ((x) + (x))

int main()
{
    int x = 10;
    cout << square(++x) << endl;
    // cout << SQUARE(++x) << endl;
    // 매크로 함수를 사용할 때, 절대 인자에 대해서 ++, -- 연산을 사용하면 안됨.
}   

/*
인라인 함수
=> 함수를 호출하지 않고, 기계어로 치환!
1) 컼파일 최적화 명령
    MSVC: /0b1
2) 인라인 최적화가 수행되면, 함수가 더 이상 호출되지 않을 경우
   메모리 상에서 기계어 코드가 제거될 수 있음.
3) 인라인 함수의 구현이 복잡한 경우,
   인라인 함수의 호출로 인해서, 전체적인 코드 메모리 사용량이 증가할 수 있음.
   => 간결한 구현을 가지는 함수에 대해서 사용하는 것이 좋음.
4) 최신 컴파일러는 인라인 함수라고 하더라도, 무조건 인라인 최적화를 수행하지는 않음.
5) C99 언어도 인라인 함수 문법이 도입됨.
   static inline int square(int x) { return x * x; }
6) 다른 파일에서 접근이 불가능
   => 인라인 함수가 범용적으로 사용되기 위해서는 구현을 헤더 파일을 통해서 제공됨.
*/